<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.cryptomator</groupId>
	<artifactId>cli</artifactId>
	<version>0.6.0-SNAPSHOT</version>
	<name>Cryptomator CLI</name>
	<description>Command line program to access encrypted files via WebDAV.</description>
	<url>https://github.com/cryptomator/cli</url>

	<properties>
	  <cryptofs.version>2.7.0-beta1</cryptofs.version>
		<webdav-nio.version>2.0.6</webdav-nio.version>
		<commons.cli.version>1.5.0</commons.cli.version>
		<fuse-nio.version>5.0.0</fuse-nio.version>

		<!-- 3rd party dependencies -->
		<dagger.version>2.51.1</dagger.version>
		<logback.version>1.5.7</logback.version>
		<slf4j.version>2.0.16</slf4j.version>

		<!-- build-time dependencies -->
		<mvn-compiler.version>3.13.0</mvn-compiler.version>
		<mvn-resources.version>3.3.1</mvn-resources.version>
		<mvn-dependency.version>3.7.1</mvn-dependency.version>
		<mvn-surefire.version>3.4.0</mvn-surefire.version>
		<mvn-jar.version>3.4.2</mvn-jar.version>

    <project.jdk.version>22</project.jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Group IDs of jars that need to stay on the class path for now -->
		<!-- remove them, as soon they got modularized or support is dropped (i.e., WebDAV) -->
		<nonModularGroupIds>org.ow2.asm,org.apache.jackrabbit,org.apache.httpcomponents</nonModularGroupIds>
	</properties>

	<licenses>
		<license>
			<name>GNU Affero General Public License (AGPL) version 3.0</name>
			<url>https://www.gnu.org/licenses/agpl.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Sebastian Stenzel</name>
			<email>sebastian.stenzel@gmail.com</email>
			<timezone>+1</timezone>
			<organization>cryptomator.org</organization>
			<organizationUrl>http://cryptomator.org</organizationUrl>
		</developer>
	</developers>

	<dependencies>
		<dependency>
			<groupId>org.cryptomator</groupId>
			<artifactId>cryptofs</artifactId>
			<version>${cryptofs.version}</version>
		</dependency>
		<dependency>
			<groupId>org.cryptomator</groupId>
			<artifactId>webdav-nio-adapter</artifactId>
			<version>${webdav-nio.version}</version>
		</dependency>
		<dependency>
			<groupId>org.cryptomator</groupId>
			<artifactId>fuse-nio-adapter</artifactId>
			<version>${fuse-nio.version}</version>
		</dependency>
		<dependency>
			<groupId>org.cryptomator</groupId>
			<artifactId>integrations-api</artifactId>
			<version>1.4.0-beta2</version>
		</dependency>
    <dependency>
        <groupId>org.cryptomator</groupId>
        <artifactId>integrations-linux</artifactId>
        <version>1.5.0-beta4</version>
    </dependency>

		<!-- Commons -->
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>${commons.cli.version}</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
    </dependency>
	</dependencies>

	<build>
<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${mvn-compiler.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${mvn-resources.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${mvn-dependency.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${mvn-surefire.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${mvn-jar.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
          <enablePreview>true</enablePreview>
					<release>${project.jdk.version}</release>
					<annotationProcessorPaths>
						<path>
							<groupId>com.google.dagger</groupId>
							<artifactId>dagger-compiler</artifactId>
							<version>${dagger.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<arg>-Adagger.fastInit=enabled</arg>
						<arg>-Adagger.formatGeneratedSource=enabled</arg>
						<arg>--enable-preview</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
        <configuration>
            <archive>
                <manifest>
							      <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                </manifest>
            </archive>
        </configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<!-- sort jars into two buckets (classpath and modulepath). exclude openjfx, which gets jlinked separately -->
					<execution>
						<id>copy-mods</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>runtime</includeScope>
							<outputDirectory>${project.build.directory}/mods</outputDirectory>
							<excludeGroupIds>org.openjfx,${nonModularGroupIds}</excludeGroupIds>
						</configuration>
					</execution>
					<execution>
						<id>copy-libs</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>runtime</includeScope>
							<outputDirectory>${project.build.directory}/libs</outputDirectory>
							<includeGroupIds>${nonModularGroupIds}</includeGroupIds>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
